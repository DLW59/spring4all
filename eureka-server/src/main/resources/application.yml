
server:
  port: 8761
spring:
  application:
    name: eureka-server
eureka:
  server:
    shouldUseReadOnlyResponseCache: true #eureka是CAP理论种基于AP策略，为了保证强一致性关闭此切换CP 默认不关闭 false关闭
    enable-self-preservation: false    #关闭服务器自我保护，客户端心跳检测15分钟内错误达到80%服务会保护，导致别人还认为是好用的服务
    eviction-interval-timer-in-ms: 60000 #清理间隔（单位毫秒，默认是60*1000）5秒将客户端剔除的服务在服务注册列表中剔除#
    response-cache-update-interval-ms: 3000  #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上 #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上默认30s
    response-cache-auto-expiration-in-seconds: 180   #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
  client:
    service-url:
#      defaultZone: 192.168.52.131:8761/eureka
      defaultZone: 127.0.0.1:8761/eureka
    register-with-eureka: false
    fetch-registry: false
  instance:
    hostname: 127.0.0.1
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${eureka.instance.hostname}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 30    # 续约更新时间间隔（默认30秒）
    lease-expiration-duration-in-seconds: 90 # 续约到期时间（默认90秒）
#logging:
##  path: classpath:logback-spring.xml
#  level: debug

